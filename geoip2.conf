wget https://nginx.org/download/nginx-1.25.2.tar.gz
wget https://nginx.org/packages/mainline/ubuntu/pool/nginx/n/nginx/nginx_1.25.2-1~focal.debian.tar.xz
tar -xvzf nginx-1.25.2.tar.gz
tar xf nginx_1.25.2-1~focal.debian.tar.xz
git clone https://github.com/yaoweibin/nginx_upstream_check_module
mv debian nginx-1.25.2/
vim /opt/nginx-1.25.2/debian/rules ### --add-module=/opt/nginx_upstream_check_module
patch -p1 < /opt/nginx_upstream_check_module/check_1.20.1+.patch
./configure --with-compat --add-dynamic-module=/opt/ngx_http_geoip2_module ### if geoip2 exist
apt install dpkg-dev -y
apt install debhelper quilt libssl-dev libpcre2-dev zlib1g-dev
dpkg-buildpackage -b --no-sign
dpkg -i nginx_1.25.2-1~focal_amd64.deb
wget --content-disposition --user={{user}} --password={{pass}} 'https://download.maxmind.com/geoip/databases/GeoLite2-Country/download?suffix=tar.gz'
  
user  nginx;
worker_processes  auto;
error_log  /var/log/nginx/error.log notice;
pid        /var/run/nginx.pid;

events {
    worker_connections  1024;
}


http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;
    geoip2 /var/lib/GeoIP/GeoLite2-Country.mmdb {
        auto_reload 5m;
        $geoip2_metadata_country_build metadata build_epoch;
        $geoip2_data_country_code source=$remote_addr country iso_code;
        $geoip2_data_country_name country names en;
    }
    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  65;

    #gzip  on;

    include /etc/nginx/conf.d/*.conf;
}

upstream backend {
   server 127.0.0.1:81;
   server 127.0.0.1:82;
   check interval=1000 rise=1 fall=2 type=http;
   check_http_send "GET /status HTTP/1.0\r\n\r\n";
   check_http_expect_alive http_2xx http_3xx;
}

server {
    listen 81;

    location /   {
        return 201;
    }
    location /status {
        return 200;
    }
}
server {
    listen 82;

    location /   {
        return 202;

    }
    location /status {
        return 200;
    }
}
server {
    listen 80;
    server_name _;
    add_header X-Internal-Country $geoip2_data_country_code always;

    location / {
       proxy_pass http://backend;
       proxy_set_header X-Country $geoip2_data_country_code;
    }

}
